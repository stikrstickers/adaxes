
NAME
    Set-AdmAccountControl
    
SYNOPSIS
    Modifies user account control (UAC) values for an Active Directory account.
    
    
SYNTAX
    Set-AdmAccountControl [-Identity] <Object> [-AccountNotDelegated <bool>] [-AllowReversiblePasswordEncryption 
    <bool>] [-AdaxesService <string>] [-CannotChangePassword <bool>] [-Credential <PSCredential>] 
    [-DoesNotRequirePreAuth <bool>] [-Enabled <bool>] [-HomedirRequired <bool>] [-MNSLogonAccount <bool>] 
    [-Partition <string>] [-PassThru] [-PasswordNeverExpires <bool>] [-PasswordNotRequired <bool>] [-Server 
    <string>] [-TrustedForDelegation <bool>] [-TrustedToAuthForDelegation <bool>] [-UseDESKeyOnly <bool>] 
    [-Confirm] [-WhatIf] [<CommonParameters>]
    
    
DESCRIPTION
    The Set-AdmAccountControl cmdlet modifies the user account control (UAC) values for an Active Directory user 
    or computer account. UAC values are represented by cmdlet parameters. For example, set the PasswordExpired 
    parameter to change whether an account is expired and to modify the ADS_UF_PASSWORD_EXPIRED UAC value.
    
    The Identity parameter specifies the Active Directory account to modify.
    You can identify an account by its distinguished name (DN), GUID, security identifier (SID) or security 
    accounts manager (SAM) account name. You can also set the Identity parameter to an object variable such as 
    $<localADAccountObject>, or you can pass an account object through the pipeline to the Identity parameter. 
    For example, you can use the Search-AdmAccount cmdlet to retrieve an account object and then pass the object 
    through the pipeline to the Set-AdmAccountControl cmdlet. Similarly, you can use Get-AdmUser, Get-AdmComputer 
    or Get-ADServiceAccount cmdlets to retrieve account objects that you can pass through the pipeline to this 
    cmdlet.
    

PARAMETERS
    -AccountNotDelegated <bool>
        Specifies whether the security context of the user is delegated to a service. When this parameter is set 
        to true, the security context of the account is not delegated to a service even when the service account 
        is set as trusted for Kerberos delegation. This parameter sets the AccountNotDelegated property for an 
        Active Directory account. This parameter also sets the ADS_UF_NOT_DELEGATED flag of the Active Directory 
        User Account Control (UAC) attribute. Possible values for this parameter include
        $false or 0
        $true or 1
        
        The following example shows how to set this parameter so that the security context of the account is not 
        delegated to a service.
        -AccountNotDelegated $true
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -AllowReversiblePasswordEncryption <bool>
        Specifies whether reversible password encryption is allowed for the account. This parameter sets the 
        AllowReversiblePasswordEncryption property of the account. This parameter also sets the 
        ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED flag of the Active Directory User Account Control (UAC) attribute. 
        Possible values for this parameter include:
        $false or 0
        $true or 1
        
        The following example shows how to set this parameter to true.
        -AllowReversiblePasswordEncryption $true
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -AdaxesService <string>
        Specifies the DNS name of an Adaxes service that will be used to execute this cmdlet. If this parameter 
        is not specified, and the cmdlet is running from an Adaxes Active Directory provider drive, the value for 
        this parameter can be determined from the current path. For example, if the current path is 
        "Adaxes:/example.com", the Adaxes service on "example.com" will be used. If the parameter is not 
        specified and the service DNS name can't be determined from the current path, the cmdlet will access 
        Active Directory directly.
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -CannotChangePassword <bool>
        Modifies the ability of an account to change its password. To disallow password change by the account set 
        this to $true.. This parameter changes the Boolean value of the CannotChangePassword property of an 
        account.
        
        The following example shows how to specify the PasswordCannotChange parameter.
        -CannotChangePassword $false
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Credential <PSCredential>
        Specifies the user account credentials to use to perform this task. The default credentials are the 
        credentials of the currently logged on user unless the cmdlet is run from an Adaxes Active Directory 
        PowerShell provider drive. If the cmdlet is run from such a provider drive, the account associated with 
        the drive is the default one.
        
        To specify this parameter, you can type a user name, such as "User1" or "Domain01\User01" or you can 
        specify a PSCredential object. If you specify a user name for this parameter, the cmdlet prompts for a 
        password.
        
        You can also create a PSCredential object by using a script or by using the Get-Credential cmdlet. You 
        can then set the Credential parameter to the PSCredential object The following example shows how to 
        create credentials.
        $AdminCredentials = Get-Credential "Domain01\User01"
        
        The following shows how to set the Credential parameter to these credentials.
        -Credential $AdminCredentials
        
        If the acting credentials do not have permission to perform the task, Adaxes Active Directory PowerShell 
        returns a terminating error.
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -DoesNotRequirePreAuth <bool>
        Specifies whether Kerberos pre-authentication is required to logon using the user or computer account. 
        This parameter sets the ADS_UF_DONT_REQUIRE_PREAUTH flag of the Active Directory User Account Control 
        (UAC) attribute. Possible values for this parameter include:
        $false or 0
        $true or 1
        
        The following example shows how to set this parameter so that Kerberos pre-authentication is required to 
        logon to the account.
        -DoesNotRequirePreAuth $false
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Enabled <bool>
        Specifies if an account is enabled. An enabled account requires a password. This parameter sets the 
        Enabled property for an account object. This parameter also sets the ADS_UF_ACCOUNTDISABLE flag of the 
        Active Directory User Account Control (UAC) attribute. Possible values for this parameter include:
        $false or 0
        $true or 1
        
        The following example shows how to set this parameter to enable the account.
        -Enabled $true
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -HomedirRequired <bool>
        Specifies whether a home directory is required for the account. This parameter sets the 
        ADS_UF_HOMEDIR_REQUIRED flag of the Active Directory User Account Control (UAC) attribute. Possible 
        values for this parameter include:
        $false or 0
        $true or 1
        
        The following example shows how to set this parameter so that a home directory is not required for the 
        account:
        -HomedirRequired $false
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Identity <Object>
        Specifies an Active Directory account object by providing one of the following property values. The 
        identifier in parentheses is the LDAP display name for the attribute.
        
        Distinguished Name
        Example: CN=SaraDavis ,CN=Users,DC=corp,DC=contoso,DC=com
        GUID (objectGUID)
        Example: 599c3d2e-f72d-4d20-8a88-030d99495f20
        Security Identifier (objectSid)
        Example: S-1-5-21-3165297888-301567370-576410423-1103
        SAM Account Name (sAMAccountName)
        Example: saradavis
        
        The cmdlet searches the default naming context or partition to find the object. 
        
        This parameter can also get this object through the pipeline or you can set this parameter to an account 
        object instance.
        
        Derived types such as the following are also accepted:
        Softerra.Adaxes.PowerShellModule.Directory.ADUser
        Softerra.Adaxes.PowerShellModule.Directory.ADComputer
        
        This example shows how to set the parameter to a distinguished name.
        -Identity "CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com"
        
        This example shows how to set this parameter to an account object instance named "accountInstance".
        -Identity $accountInstance
        
        Required?                    true
        Position?                    1
        Default value                
        Accept pipeline input?       true (ByValue)
        Accept wildcard characters?  false
        
    -MNSLogonAccount <bool>
        Specifies whether the account is a Majority Node Set (MNS) logon account. This parameter also sets the 
        ADS_UF_MNS_LOGON_ACCOUNT flag of the Active Directory User Account Control (UAC) attribute. Possible 
        values for this parameter include:
        $false or 0
        $true or 1
        
        You can use MNS logon accounts to configure a multi-node cluster without using a shared disk drive.
        
        The following example shows how to set this parameter to identify this account as an MNS account.
        -MSNLogonAccount $true
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Partition <string>
        Specifies the distinguished name of an Active Directory partition. The distinguished name must be one of 
        the naming contexts on the current directory server. The cmdlet searches this partition to find the 
        object defined by the Identity parameter.
        The following two examples show how to specify a value for this parameter.
        -Partition "CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM"
        
        -Partition "CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM"
        
        In many cases, a default value will be used for the Partition parameter if no value is specified.  The 
        rules for determining the default value are given below.  Note that rules listed first are evaluated 
        first, and once a default value can be determined, no further rules will be evaluated.
        
        - If the Identity parameter is set to a distinguished name, the default value of Partition is 
        automatically generated from this distinguished name.
        - If running cmdlets from an Adaxes Active Directory provider drive, the default value of Partition is 
        automatically generated from the current path in the drive.
        - If none of the previous cases apply, the default value of Partition will be set to the default 
        partition or naming context of the target domain.
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -PassThru [<SwitchParameter>]
        Returns the new or modified object. By default (i.e. if -PassThru is not specified), this cmdlet does not 
        generate any output.
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -PasswordNeverExpires <bool>
        Specifies whether the password of an account can expire. This parameter sets the PasswordNeverExpires 
        property of an account object. This parameter also sets the ADS_UF_DONT_EXPIRE_PASSWD flag of the Active 
        Directory User Account Control attribute. Possible values for this parameter include:
        $false or 0
        $true or 1
        
        Note: This parameter cannot be set to $true or 1 for an account that also has the ChangePasswordAtLogon 
        property set to true.
        
        The following example shows how to set this parameter so that the password can expire.
        -PasswordNeverExpires $false
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -PasswordNotRequired <bool>
        Specifies whether the account requires a password. This parameter sets the PasswordNotRequired property 
        of an account, such as a user or computer account. This parameter also sets the ADS_UF_PASSWD_NOTREQD 
        flag of the Active Directory User Account Control attribute. Possible values for this parameter are:
        $false or 0
        $true or 1
        
        The following example shows how to set this parameter so that as password is not required for the account.
        -PasswordNotRequired $true
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Server <string>
        Specifies the Active Directory Domain Services instance to connect to, by providing one of the following 
        values for a corresponding domain name or directory server.
        Domain name values:
        Fully qualified domain name
        Examples: corp.contoso.com
        NetBIOS name
        Example: CORP
        
        Directory server values:
        Fully qualified directory server name
        Example: corp-DC12.corp.contoso.com
        NetBIOS name
        Example: corp-DC12
        Fully qualified directory server name and port
        Example: corp-DC12.corp.contoso.com:3268
        
        The default value for the Server parameter is determined by one of the following methods in the order 
        that they are listed:
        -By using Server value from objects passed through the pipeline.
        -By using the server information associated with the Adaxes Active Directory PowerShell provider drive, 
        when running under that drive.
        -By using the domain of the computer running Powershell.
        
        The following example shows how to specify a fully qualified domain name as the parameter value.
        -Server "corp.contoso.com"
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -TrustedForDelegation <bool>
        Specifies whether an account is trusted for Kerberos delegation. A service that runs under an account 
        that is trusted for Kerberos delegation can assume the identity of a client requesting the service. This 
        parameter sets the TrustedForDelegation property of an account object. This value also sets the 
        ADS_UF_TRUSTED_FOR_DELEGATION flag of the Active Directory User Account Control attribute. Possible 
        values for this parameter are:
        $false or 0
        $true or 1
        
        The following example shows how to specify that an account is trusted for Kerberos delegation.
        -TrustedForDelegation $true
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -TrustedToAuthForDelegation <bool>
        Specifies whether an account is enabled for delegation. When this parameter is set to true, a service 
        running under such an account can impersonate a client on other remote servers on the network. This 
        parameter sets the ADS_UF_TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION flag of the Active Directory User 
        Account Control attribute. Possible values for this parameter are:
        $false or 0
        $true or 1
        
        The following example shows how to set this parameter so that the account is enabled for delegation.
        -TrustedToAuthForDelegation $true
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -UseDESKeyOnly <bool>
        Specifies whether an account is restricted to use only Data Encryption Standard (DES) encryption types 
        for keys. This parameter sets the
        ADS_UF_USE_DES_KEY_ONLY flag of the Active Directory User Account Control attribute. Possible values for 
        this parameter are:
        $false or 0
        $true or 1
        
        The following example shows how to set this parameter so that an account must use DES encryption types 
        for keys.
        -UseDESKeyOnly $true
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Confirm [<SwitchParameter>]
        Prompts you for confirmation before executing the command.
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -WhatIf [<SwitchParameter>]
        Describes what would happen if you executed the command without actually executing the command.
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    <CommonParameters>
        This cmdlet supports the common parameters: Verbose, Debug,
        ErrorAction, ErrorVariable, WarningAction, WarningVariable,
        OutBuffer, PipelineVariable, and OutVariable. For more information, see 
        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216). 
    
INPUTS
    Softerra.Adaxes.PowerShellModule.Directory.ADAccount
        An account object is received by the Identity parameter.
        
        Derived types, such as the following are also accepted:
        Softerra.Adaxes.PowerShellModule.Directory.ADUser
        Softerra.Adaxes.PowerShellModule.Directory.ADComputer
    
    
OUTPUTS
    None
        
    
    
NOTES
    
    
        This cmdlet does not work when connected to Global Catalog port.
        
    
    -------------------------- EXAMPLE 1 --------------------------
    
    C:\PS>Set-AdmAccountControl JimmyBi -PasswordNotRequired $false
    
    Sets the flag on userAccountControl to make sure that a password is required for logon.
    
    
    
    
    -------------------------- EXAMPLE 2 --------------------------
    
    C:\PS>Set-AdmAccountControl 'CN=Jimmy Bischoff,OU=HumanResources,OU=UserAccounts,DC=FABRIKAM,DC=COM' 
    -CannotChangePassword $true
    
    Sets the security descriptor of the user to make sure they cannot change their own password.
    
    
    
    
    -------------------------- EXAMPLE 3 --------------------------
    
    C:\PS>Set-AdmAccountControl SQLAdmin1 -AccountNotDelegated $true
    
    Sets the flag on userAccountControl to make sure that the account cannot be delegated.
    
    
    
    
    -------------------------- EXAMPLE 4 --------------------------
    
    C:\PS>Set-AdmAccountControl 'CN=IIS01 SvcAccount,OU=ServiceAccounts,OU=Managed,DC=FABRIKAM,DC=COM' 
    -TrustedToAuthForDelegation $true
    
    Sets the flag on userAccountControl to make sure that the account is now trusted to authenticate for 
    delegation.
    
    
    
    
    -------------------------- EXAMPLE 5 --------------------------
    
    C:\PS>Set-AdmAccountControl -Identity "FABRIKAM-SRV1" -TrustedForDelegation $true
    
    The specified computer is now set to be trusted for delegation.
    
    
    
    
    -------------------------- EXAMPLE 6 --------------------------
    
    C:\PS>Set-AdmAccountControl DickBe -PasswordNeverExpires $true
    
    Sets the password of the user to never expire.
    
    
    
    
    -------------------------- EXAMPLE 7 --------------------------
    
    C:\PS>Set-AdmAccountControl 'CN=Dick Beekman,OU=HumanResources,OU=UserAccounts,DC=FABRIKAM,DC=COM' 
    -HomedirRequired $true
    
    Sets the user account to require a Home Directory.
    
    
    
    
    
RELATED LINKS
    Get-AdmUser 
    Get-AdmComputer 



