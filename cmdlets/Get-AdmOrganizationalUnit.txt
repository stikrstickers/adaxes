
NAME
    Get-AdmOrganizationalUnit
    
SYNOPSIS
    Gets one or more Active Directory organizational units.
    
    
SYNTAX
    Get-AdmOrganizationalUnit -Filter <string> [-ResultPageSize <int>] [-ResultSetSize 
    <System.Nullable[System.Int32]>] [-SearchBase <string>] [-SearchScope {Base | OneLevel | Subtree}] 
    [-AdaxesService <string>] [-Credential <PSCredential>] [-Partition <string>] [-Properties <string[]>] 
    [-Server <string>] [<CommonParameters>]
    
    Get-AdmOrganizationalUnit [-Identity] <Object> [-AdaxesService <string>] [-Credential <PSCredential>] 
    [-Partition <string>] [-Properties <string[]>] [-Server <string>] [<CommonParameters>]
    
    Get-AdmOrganizationalUnit -LDAPFilter <string> [-ResultPageSize <int>] [-ResultSetSize 
    <System.Nullable[System.Int32]>] [-SearchBase <string>] [-SearchScope {Base | OneLevel | Subtree}] 
    [-AdaxesService <string>] [-Credential <PSCredential>] [-Partition <string>] [-Properties <string[]>] 
    [-Server <string>] [<CommonParameters>]
    
    
DESCRIPTION
    The Get-AdmOrganizationalUnit cmdlet gets an organizational unit object or performs a search to retrieve 
    multiple organizational units.
    
    The Identity parameter specifies the Active Directory organizational unit to retrieve. You can identify an 
    organizational unit by its distinguished name (DN) or GUID. You can also set the parameter to an 
    organizational unit object variable, such as $<localOrganizationalunitObject> or pass an organizational unit 
    object through the pipeline to the Identity parameter.
    
    To search for and retrieve more than one organizational unit, use the Filter or LDAPFilter parameters. The 
    Filter parameter uses the PowerShell Expression Language to write query strings for Active Directory. 
    PowerShell Expression Language syntax provides rich type conversion support for value types received by the 
    Filter parameter. If you have existing LDAP query strings, you can use the LDAPFilter parameter.
    
    This cmdlet retrieves a default set of organizational unit object properties. To retrieve additional 
    properties use the Properties parameter. For more information about how to determine the properties for 
    computer objects, see the Properties parameter description.
    

PARAMETERS
    -AdaxesService <string>
        Specifies the DNS name of an Adaxes service that will be used to execute this cmdlet. If this parameter 
        is not specified, and the cmdlet is running from an Adaxes Active Directory provider drive, the value for 
        this parameter can be determined from the current path. For example, if the current path is 
        "Adaxes:/example.com", the Adaxes service on "example.com" will be used. If the parameter is not 
        specified and the service DNS name can't be determined from the current path, the cmdlet will access 
        Active Directory directly.
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Credential <PSCredential>
        Specifies the user account credentials to use to perform this task. The default credentials are the 
        credentials of the currently logged on user unless the cmdlet is run from an Adaxes Active Directory 
        PowerShell provider drive. If the cmdlet is run from such a provider drive, the account associated with 
        the drive is the default one.
        
        To specify this parameter, you can type a user name, such as "User1" or "Domain01\User01" or you can 
        specify a PSCredential object. If you specify a user name for this parameter, the cmdlet prompts for a 
        password.
        
        You can also create a PSCredential object by using a script or by using the Get-Credential cmdlet. You 
        can then set the Credential parameter to the PSCredential object The following example shows how to 
        create credentials.
        $AdminCredentials = Get-Credential "Domain01\User01"
        
        The following shows how to set the Credential parameter to these credentials.
        -Credential $AdminCredentials
        
        If the acting credentials do not have permission to perform the task, Adaxes Active Directory PowerShell 
        returns a terminating error.
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Filter <string>
        Specifies a query string that retrieves Active Directory objects. This string uses the PowerShell 
        Expression Language syntax. The PowerShell Expression Language syntax provides rich type-conversion 
        support for value types received by the Filter parameter. The syntax uses an in-order representation, 
        which means that the operator is placed between the operand and the value. 
        
        Syntax:
        The following syntax uses Backus-Naur form to show how to use the PowerShell Expression Language for this 
        parameter.
        
        <filter>  ::= "{" <FilterComponentList> "}"
        
        <FilterComponentList> ::= <FilterComponent> | <FilterComponent> <JoinOperator> <FilterComponent> | 
        <NotOperator>  <FilterComponent>
        
        <FilterComponent> ::= <attr> <FilterOperator> <value> | "(" <FilterComponent> ")"
        
        <FilterOperator> ::= "-eq" | "-le" | "-ge" | "-ne" | "-lt" | "-gt"| "-approx" | "-bor" | "-band" | 
        "-recursivematch" | "-like" | "-notlike"
        
        <JoinOperator> ::= "-and" | "-or"
        
        <NotOperator> ::= "-not"
        
        <attr> ::= <PropertyName> | <LDAPDisplayName of the attribute>
        
        <value>::= <compare this value with an <attr> by using the specified <FilterOperator>>
        
        Examples:
        The following examples show how to use this syntax with Active Directory cmdlets.
        
        To get all objects of the type specified by the cmdlet, use the asterisk wildcard:
        All user objects:
        Get-AdmUser -Filter *
        -or-
        All computer objects:
        Get-AdmComputer -Filter *
        
        To get all user objects that have an e-mail message attribute, use one of the following commands:
        Get-AdmUser -Filter {EmailAddress -like "*"}
        Get-AdmUser -Filter {mail -like "*"}
        -or-
        Get-AdmObject -Filter {(mail -like "*") -and (ObjectClass -eq "user")}
        
        Note: PowerShell wildcards other than "*", such as "?" are not supported by the Filter syntax.
        
        To get all users objects that have surname of Smith and that have an e-mail attribute, use one of the 
        following commands:
        Get-AdmUser -filter {(EmailAddress -like "*") -and (Surname  -eq "smith")}
        -or-
        Get-AdmUser -filter {(mail -eq "*") -and (sn -eq "Smith")}
        
        To get all user objects who have not logged on since January 1, 2007, use the following commands:
        $logonDate = New-Object System.DateTime(2007, 1, 1)
        Get-AdmUser  -filter { lastLogon -le $logonDate  }
        
        To get all groups that have a group category of Security and a group scope of Global, use one of the 
        following commands:
        Get-AdmGroup  -filter {GroupCategory  -eq "Security"  -and GroupScope -eq "Global"}
        -or-
        Get-AdmGroup -filter {GroupType -band 0x80000000}
        
        Note: To query using LDAP query strings, use the LDAPFilter parameter.
        
        Required?                    true
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Identity <Object>
        Specifies the identity of an Active Directory organizational unit object. The parameter accepts the 
        following identity formats. The identifier in parentheses is the LDAP display name for the attribute that 
        contains the identity.
        
        Distinguished Name
        Example:  OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
        GUID (objectGUID)
        Example: 599c3d2e-f72d-4d20-8a88-030d99495f20
        
        The cmdlet searches the default naming context or partition to find the object. 
        
        This parameter can also get this object through the pipeline or you can set this parameter to an object 
        instance.
        
        This example shows how to set the parameter to a distinguished name.
        -Identity  "OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com"
        
        This example shows how to set this parameter to an organizational unit object instance named "OUinstance".
        -Identity   $OUInstance
        
        Required?                    true
        Position?                    1
        Default value                
        Accept pipeline input?       true (ByValue)
        Accept wildcard characters?  false
        
    -LDAPFilter <string>
        Specifies an LDAP query string that is used to filter Active Directory objects. You can use this 
        parameter to run your existing LDAP queries. The Filter parameter syntax supports the same functionality 
        as the LDAP syntax. For more information, see the Filter parameter description and the 
        about_ActiveDirectory_Filter.
        
        The following example shows how to set this parameter to search for all objects in the organizational 
        unit specified by the SearchBase parameter with a name beginning with "sara".
        
        -LDAPFilter "(name=sara*)"  -SearchScope Subtree -SearchBase "DC=NA,DC=fabrikam,DC=com"
        
        Required?                    true
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Partition <string>
        Specifies the distinguished name of an Active Directory partition. The distinguished name must be one of 
        the naming contexts on the current directory server. The cmdlet searches this partition to find the 
        object defined by the Identity parameter.
        The following two examples show how to specify a value for this parameter.
        -Partition "CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM"
        
        -Partition "CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM"
        
        In many cases, a default value will be used for the Partition parameter if no value is specified.  The 
        rules for determining the default value are given below.  Note that rules listed first are evaluated 
        first, and once a default value can be determined, no further rules will be evaluated.
        
        - If the Identity parameter is set to a distinguished name, the default value of Partition is 
        automatically generated from this distinguished name.
        - If running cmdlets from an Adaxes Active Directory provider drive, the default value of Partition is 
        automatically generated from the current path in the drive.
        - If none of the previous cases apply, the default value of Partition will be set to the default 
        partition or naming context of the target domain.
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Properties <string[]>
        Specifies the properties of the output object to retrieve from the server. Use this parameter to retrieve 
        properties that are not included in the default set.
        
        Specify properties for this parameter as a comma-separated list of names. To display all of the 
        attributes that are set on the object, specify * (asterisk).
        
        To specify an individual extended property, use the name of the property. For properties that are not 
        default or extended properties, you must specify the LDAP display name of the attribute.
        
        To retrieve properties and display them for an object, you can use the Get-* cmdlet associated with the 
        object and pass the output to the Get-Member cmdlet. The following examples show how to retrieve 
        properties for a group where the Administrator's group is used as the sample group object.
        
        Get-AdmGroup -Identity Administrators | Get-Member
        
        To retrieve and display the list of all the properties for an ADGroup object, use the following command:
        Get-AdmGroup -Identity Administrators -Properties *| Get-Member
        
        The following examples show how to use the Properties parameter to retrieve individual properties as well 
        as the default, extended or complete set of properties.
        
        To retrieve the extended properties "OfficePhone" and "Organization" and the default properties of an 
        ADUser object named "SaraDavis", use the following command:
        Get-ADUser -Identity SaraDavis -Properties OfficePhone,Organization
        
        To retrieve the properties with LDAP display names of "otherTelephone" and "otherMobile", in addition to 
        the default properties for the same user, use the following command:
        Get-ADUser -Identity SaraDavis -Properties otherTelephone, otherMobile |Get-Member
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -ResultPageSize <int>
        Specifies the number of objects to include in one page for an Active Directory Domain Services query.
        
        The default is 256 objects per page.
        
        The following example shows how to set this parameter.
        -ResultPageSize 500
        
        Required?                    false
        Position?                    named
        Default value                256
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -ResultSetSize <System.Nullable[System.Int32]>
        Specifies the maximum number of objects to return for an Active Directory Domain Services query. If you 
        want to receive all of the objects, set this parameter to $null (null value). You can use Ctrl+c to stop 
        the query and return the objects.
        The default is $null.
        The following example shows how to set this parameter so that you receive all of the returned objects.
        -ResultSetSize $null
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -SearchBase <string>
        Specifies an Active Directory path to search under.
        
        When you run a cmdlet from an Adaxes Active Directory provider drive, the default value of this parameter 
        is the current path of the drive.
        
        When you run a cmdlet outside of an Adaxes Active Directory provider drive, the default value of this 
        parameter is the default naming context of the target domain.
        
        The following example shows how to set this parameter to search under an OU.
        -SearchBase "ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com"
        
        When the value of the SearchBase parameter is set to an empty string and you are connected to a GC port, 
        all partitions will be searched. If the value of the SearchBase parameter is set to an empty string and 
        you are not connected to a GC port, an error will be thrown.
        The following example shows how to set this parameter to an empty string.   -SearchBase ""
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -SearchScope <ADSearchScope>
        Specifies the scope of an Active Directory search. Possible values for this parameter are:
        Base or 0
        OneLevel or 1
        Subtree or 2
        
        A Base query searches only the current path or object. A OneLevel query searches the immediate children 
        of that path or object. A Subtree query searches the current path or object and all children of that path 
        or object.
        
        The following example shows how to set this parameter to a subtree search.
        -SearchScope Subtree
        
        The following lists the acceptable values for this parameter:
        
        Base
            
        
        OneLevel
            
        
        Subtree
            
        
        Required?                    false
        Position?                    named
        Default value                Subtree
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Server <string>
        Specifies the Active Directory Domain Services instance to connect to, by providing one of the following 
        values for a corresponding domain name or directory server.
        Domain name values:
        Fully qualified domain name
        Examples: corp.contoso.com
        NetBIOS name
        Example: CORP
        
        Directory server values:
        Fully qualified directory server name
        Example: corp-DC12.corp.contoso.com
        NetBIOS name
        Example: corp-DC12
        Fully qualified directory server name and port
        Example: corp-DC12.corp.contoso.com:3268
        
        The default value for the Server parameter is determined by one of the following methods in the order 
        that they are listed:
        -By using Server value from objects passed through the pipeline.
        -By using the server information associated with the Adaxes Active Directory PowerShell provider drive, 
        when running under that drive.
        -By using the domain of the computer running Powershell.
        
        The following example shows how to specify a fully qualified domain name as the parameter value.
        -Server "corp.contoso.com"
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    <CommonParameters>
        This cmdlet supports the common parameters: Verbose, Debug,
        ErrorAction, ErrorVariable, WarningAction, WarningVariable,
        OutBuffer, PipelineVariable, and OutVariable. For more information, see 
        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216). 
    
INPUTS
    None or Object
        An organizational unit object is received by the Identity parameter.
    
    
OUTPUTS
    Softerra.Adaxes.PowerShellModule.Directory.ADOrganizationalUnit
        Returns one or more organizational unit objects.
        
        This cmdlet returns a default set of ADOrganizational unit property values. To retrieve additional 
        ADOrganizational unit properties, use the Properties parameter.
        
        To view the properties for an ADOrganizational unit object, see the following examples. To run these 
        examples, replace <organizational unit> with an organizational unit identifier such as the distinguished 
        name (DN) of an organizational unit.
        
        To get a list of the default set of properties of an ADOrganizational unit object, use the following 
        command:
        Get-ADOrganizational unit <organizational unit>| Get-Member
        
        To get a list of all the properties of an ADOrganizational unit object, use the following command:
        Get-ADOrganizational unit <organizational unit> -Properties * | Get-Member
    
    
NOTES
    
    
        
        
    
    -------------------------- EXAMPLE 1 --------------------------
    
    C:\PS>Get-AdmOrganizationalUnit -Filter 'Name -like "*"' | FT Name, DistinguishedName -A
    
    Name                 DistinguishedName
    ----                 -----------------
    Domain Controllers   OU=Domain Controllers,DC=FABRIKAM,DC=COM
    UserAccounts         OU=UserAccounts,DC=FABRIKAM,DC=COM
    Sales                OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM
    Marketing            OU=Marketing,OU=UserAccounts,DC=FABRIKAM,DC=COM
    Production           OU=Production,OU=UserAccounts,DC=FABRIKAM,DC=COM
    HumanResources       OU=HumanResources,OU=UserAccounts,DC=FABRIKAM,DC=COM
    NorthAmerica         OU=NorthAmerica,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM
    SouthAmerica         OU=SouthAmerica,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM
    Europe               OU=Europe,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM
    AsiaPacific          OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM
    Finance              OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM
    Corporate            OU=Corporate,OU=UserAccounts,DC=FABRIKAM,DC=COM
    ApplicationServers   OU=ApplicationServers,DC=FABRIKAM,DC=COM
    Groups               OU=Groups,OU=Managed,DC=FABRIKAM,DC=COM
    PasswordPolicyGroups OU=PasswordPolicyGroups,OU=Groups,OU=Managed,DC=FABRIKAM,DC=COM
    Managed              OU=Managed,DC=FABRIKAM,DC=COM
    ServiceAccounts      OU=ServiceAccounts,OU=Managed,DC=FABRIKAM,DC=COM
    
    
    
    Description
    -----------
    
    Gets all the Organizational Units in the domain
    
    
    
    
    
    -------------------------- EXAMPLE 2 --------------------------
    
    C:\PS>Get-AdmOrganizationalUnit -Identity 'OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM' | ft 
    Name,Country,PostalCode,City,StreetAddress,State -A
    
    Name        Country PostalCode City     StreetAddress    State
    ----        ------- ---------- ----     -------------    -----
    AsiaPacific AU      4171       Balmoral 45 Martens Place QLD
    
    
    
    Description
    -----------
    
    Gets the Organizational Unit with DistinguishedName 
    'OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM'.
    
    
    
    
    
    -------------------------- EXAMPLE 3 --------------------------
    
    C:\PS>Get-AdmOrganizationalUnit -LDAPFilter '(name=*)' -SearchBase 
    'OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM' -SearchScope OneLevel | ft 
    Name,Country,PostalCode,City,StreetAddress,State
    
    Name                    Country                 PostalCode             City                   StreetAddress   
           State
    ----                    -------                 ----------             ----                   -------------   
           -----
    AsiaPacific             AU                      4171                   Balmoral               45 Martens 
    Place       QLD
    Europe                  UK                      NG34 0NI               QUARRINGTON            22 Station Rd
    NorthAmerica            US                      02142                  Cambridge              1634 Randolph 
    Street   MA
    
    
    
    Description
    -----------
    
    Gets Organizational Units underneath the sales Organizational Unit using an LDAP filter.
    
    
    
    
    
    
RELATED LINKS
    New-AdmOrganizationalUnit 
    Set-AdmOrganizationalUnit 
    Remove-AdmOrganizationalUnit 



